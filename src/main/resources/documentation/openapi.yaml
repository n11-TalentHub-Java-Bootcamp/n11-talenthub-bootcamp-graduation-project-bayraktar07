openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/users:
    get:
      tags:
        - user-controller
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
    put:
      tags:
        - user-controller
      operationId: updateExistingUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    post:
      tags:
        - user-controller
      operationId: saveNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    delete:
      tags:
        - user-controller
      operationId: deleteUserById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/applications:
    post:
      tags:
        - application-controller
      operationId: saveNewApplication
      parameters:
        - name: identificationNumber
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationDto'
  /api/v1/users/{id}:
    get:
      tags:
        - user-controller
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserCreditDto'
  /api/v1/applications/identification-numbers/{identificationNumber}:
    get:
      tags:
        - application-controller
      operationId: getApplicationByIdentificationNumberAndBirthDate
      parameters:
        - name: identificationNumber
          in: path
          required: true
          schema:
            type: string
        - name: birthDate
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationDto'
components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        identificationNumber:
          pattern: \d{11}
          type: string
        name:
          pattern: \w+
          type: string
        surname:
          pattern: \w+
          type: string
        monthlyIncome:
          type: number
        phoneNumber:
          pattern: \d{10}
          type: string
        birthDate:
          type: string
          format: date
        deposit:
          type: number
    ApplicationDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        creditResult:
          type: string
          enum:
            - APPROVED
            - DENIED
        applicationDate:
          type: string
          format: date
        creditLimit:
          type: number
        userId:
          type: integer
          format: int64
    UserCreditDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        identificationNumber:
          pattern: \d{11}
          type: string
        name:
          pattern: \w+
          type: string
        surname:
          pattern: \w+
          type: string
        monthlyIncome:
          type: number
        phoneNumber:
          pattern: \d{10}
          type: string
        birthDate:
          type: string
          format: date
        deposit:
          type: number
        creditScore:
          type: integer
          format: int32
